{"version":3,"sources":["constants/Config.js","components/Auth/Styles.js","context/Auth/AuthContext.js","components/UI/Chip/Chip.js","components/UI/Button/Button.js","images/trail.svg","images/background.svg","styles.js","components/Auth/Auth.js","images/line.svg","pages/Index/Styles.js","store/actions/actionsTypes.js","axios/spotifyApi.js","store/actions/apiActions.js","components/AccountInformation/Styles.js","components/UI/BreakLine/Styles.js","components/UI/BreakLine/BreakLine.js","components/AccountInformation/AccountInformation.js","pages/Index/Index.js","pages/Callback/Callback.js","App.js","reportWebVitals.js","store/reducers/accessTokenReducer.js","store/reducers/apiReducer.js","index.js"],"names":["Config","clientId","redirectUri","Description","styled","div","AuthContext","createContext","AuthContextProvider","props","useState","isAuthenticated","setIsAuthenticated","Provider","value","children","ChipMaterialUi","Button","GlobalStyle","createGlobalStyle","setBackground","trailImage","backgroundImage","Center","Auth","accessToken","useSelector","state","useContext","dispatch","useDispatch","channel","useMemo","BroadcastChannel","useEffect","onmessage","message","type","data","close","label","className","variant","color","onClick","set","client_id","redirect_uri","scope","response_type","show_dialog","urlParamsString","Querystring","stringify","window","open","Container","Title","titleLineImage","SET_ACCESS_TOKEN","API_FETCH_START","API_FETCH_STOP","GET_ACCOUNT_INFORMATION_SUCCESS","GET_PLAYLISTS_SUCCESS","GET_PLAYLIST_SUCCESS","axiosSpotifyApi","axios","create","baseURL","getAccountInformationSuccess","response","actionsTypes","payload","Information","Username","ButtonContainer","BreakLineComponent","hr","BreakLine","AccountInformation","accountInformation","api","apiResponse","importFileRef","useRef","a","get","headers","Authorization","playlists","console","log","getAccountInformation","arrayChunk","array","chunkSize","result","i","length","chunk","slice","push","backupHandler","backupPlaylist","accountBackup","followers","Object","entries","items","item","owner","display_name","username","href","fetchedPlaylist","name","id","tracks","uri","track","blob","Blob","JSON","saveAs","restoreHandler","e","Response","target","files","json","playlist","trackChunks","map","userId","method","then","forEach","tracksChunk","uris","follower","numberOfPlaylists","numberOfTracks","ref","onChange","style","display","current","click","Index","content","Callback","postMessage","location","hash","indexOf","App","pathname","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","initialState","isLoading","total","rootReducer","combineReducers","accessTokenReducer","apiReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7307fe0f.chunk.js","sourcesContent":["export const Config = {\n    clientId: '2aefdc08c981420ea73a1f7e8486e821',\n    redirectUri: 'http://localhost:3000/callback'\n}\n\nexport default Config;","import styled from 'styled-components';\n\nexport const Description = styled.div`\n  //text-align: center;\n  line-height: 1.5;\n  margin-bottom: 30px;\n`;","import React, {createContext, useState} from \"react\";\n\nexport const AuthContext = createContext();\n\nconst AuthContextProvider = props => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    return (\n        <AuthContext.Provider value={{isAuthenticated, setIsAuthenticated}}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContextProvider;","import React from \"react\";\nimport {Chip as ChipMaterialUi} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport default styled(ChipMaterialUi)`\n  &.green {\n    background-color: #26a328;\n  },\n  &.purple {\n    background-color: #4e0b3e;\n  },\n  && {\n    color: #fff;\n    margin-left: 8px;\n    margin-right: 8px;\n    font-size: 0.8rem;\n  }\n`;","import React from \"react\";\nimport {Button as ButtonMaterialUi} from \"@material-ui/core\";\n\nconst Button = (props) => {\n    return <ButtonMaterialUi {...props}>{props.children}</ButtonMaterialUi>;\n};\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/trail.3ec63967.svg\";","export default __webpack_public_path__ + \"static/media/background.0e94f6ff.svg\";","import styled, {createGlobalStyle} from 'styled-components';\nimport trailImage from './images/trail.svg';\nimport backgroundImage from './images/background.svg';\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  :root {\n    font-size: 20px;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    font-family: 'Montserrat', sans-serif;\n    ${props => props.setBackground ? `background-image: url(${trailImage}), url(${backgroundImage})` : ''};\n    background-position: top;\n    background-repeat: no-repeat;\n  }\n`;\n\nexport const Center = styled.div`\n  text-align: center;\n`;","import React, {useContext, useEffect, useMemo} from \"react\";\nimport Querystring from \"querystring\";\nimport Config from '../../constants/Config';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Description} from \"./Styles\";\nimport {AuthContext} from \"../../context/Auth/AuthContext\";\nimport Chip from '../../components/UI/Chip/Chip'\nimport Button from \"../UI/Button/Button\";\nimport {Center} from \"../../styles\";\n\nconst Auth = () => {\n    const accessToken = useSelector(state => state.accessToken);\n    const {setIsAuthenticated} = useContext(AuthContext);\n    const dispatch = useDispatch();\n    const channel = useMemo(() => new BroadcastChannel('access-token'), []);\n\n    useEffect(() => {\n        channel.onmessage = message => dispatch({type: 'SET_ACCESS_TOKEN', accessToken: message.data});\n        return channel.close;\n    }, [channel, dispatch]);\n    useEffect(() => {\n        if (accessToken !== '') {\n            setIsAuthenticated(true);\n        }\n    }, [setIsAuthenticated, accessToken]);\n\n    const authHandler = () => {\n        const set = {\n            client_id: Config.clientId,\n            redirect_uri: Config.redirectUri,\n            scope: 'playlist-read playlist-read-private playlist-modify-public playlist-modify-private user-library-read user-library-modify',\n            response_type: 'token',\n            show_dialog: 'true'\n        };\n\n        // Convert object to a query string\n        const urlParamsString = Querystring.stringify(set);\n\n        window.open(\n            `https://accounts.spotify.com/authorize?${urlParamsString}`,\n            \"Spotify\",\n            `menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=480, height=900 left=1000 top=0`\n        );\n    }\n\n    return (\n        <Center>\n            <Description>\n                Backup your Spotify playlists in<Chip label=\"JSON\" className='green'/>format or restore from file.\n            </Description>\n            <Button variant=\"contained\" color=\"primary\" onClick={authHandler}>Login to Spotify</Button>\n        </Center>\n    );\n}\n\nexport default Auth;","export default __webpack_public_path__ + \"static/media/line.437ec098.svg\";","import styled from 'styled-components';\nimport titleLineImage from '../../images/line.svg'\n\nexport const Container = styled.div`\n  border: 1px solid #adadad8c;\n  width: 500px;\n  height: 600px;\n  margin: 90px auto 0 auto;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 7px 7px 19px -5px rgba(0, 0, 0, 0.42);\n`;\n\nexport const Title = styled.div`\n  margin: auto;\n  font-size: 3rem;\n  border-bottom: 3px solid;\n  padding: 5px 20px 0 20px;\n  border-image: url(${titleLineImage}) 1;\n  text-align: center;\n  max-width: 800px;\n`;","export const SET_ACCESS_TOKEN = 'SET_ACCESS_TOKEN';\n\nexport const API_FETCH_START = 'API_FETCH_START';\nexport const API_FETCH_STOP = 'API_FETCH_STOP';\n\nexport const GET_ACCOUNT_INFORMATION_SUCCESS = 'GET_API_SUCCESS';\nexport const GET_PLAYLISTS_SUCCESS = 'GET_PLAYLISTS_SUCCESS';\nexport const GET_PLAYLIST_SUCCESS = 'GET_PLAYLIST_SUCCESS';\n\n","import axios from \"axios\";\n\nconst axiosSpotifyApi =  axios.create({\n    baseURL: 'https://api.spotify.com/v1'\n});\n\nexport default axiosSpotifyApi;","import * as actionsTypes from '../actions/actionsTypes';\nimport axiosSpotifyApi from \"../../axios/spotifyApi\";\nimport axios from \"axios\";\n\nconst apiFetchStart = () => ({\n    type: actionsTypes.API_FETCH_START,\n})\nconst apiFetchStop = () => ({\n    type: actionsTypes.API_FETCH_STOP,\n})\nconst getAccountInformationSuccess = response => ({\n    type: actionsTypes.GET_ACCOUNT_INFORMATION_SUCCESS,\n    payload: response\n})\nconst getPlaylistsSuccess = response => ({\n    type: actionsTypes.GET_PLAYLISTS_SUCCESS,\n    payload: response\n})\nconst getPlaylistSuccess = response => ({\n    type: actionsTypes.GET_PLAYLIST_SUCCESS,\n    payload: response\n})\n\nexport const getAccountInformation = accessToken => async dispatch => {\n    dispatch(apiFetchStart());\n\n    try {\n        const playlists = await axiosSpotifyApi.get('/me/playlists', {\n            headers: {Authorization: `Bearer ${accessToken}`}\n        })\n        dispatch(getPlaylistsSuccess(playlists));\n\n        const accountInformation = await axiosSpotifyApi.get('/me', {\n            headers: {Authorization: `Bearer ${accessToken}`}\n        })\n        dispatch(getAccountInformationSuccess(accountInformation));\n\n        dispatch(apiFetchStop());\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from 'styled-components';\n\nexport const Information = styled.div`\n  padding: 8px 0;\n`;\n\nexport const Username = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  font-weight: bold;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n`;","import styled from \"styled-components\";\n\nexport const BreakLineComponent = styled.hr`\n  border: 1px solid #f9f9f9;\n`;\n\nexport default BreakLineComponent;","import React from \"react\";\nimport BreakLineComponent from \"./Styles\";\n\nexport const BreakLine = () => {\n    return (<BreakLineComponent/>);\n}\n\nexport default BreakLine;","import React, {Fragment, useEffect, useRef} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccountInformation} from \"../../store/actions/apiActions\";\nimport {ButtonContainer, Information, Username} from \"./Styles\";\nimport BreakLine from \"../UI/BreakLine/BreakLine\";\nimport {saveAs} from 'file-saver';\nimport Chip from \"../UI/Chip/Chip\";\nimport Button from \"../UI/Button/Button\";\nimport axios from \"axios\";\nimport axiosSpotifyApi from \"../../axios/spotifyApi\";\n\nconst AccountInformation = () => {\n    const accessToken = useSelector(state => state.accessToken);\n    const accountInformation = useSelector(state => state.api.accountInformation);\n    const apiResponse = useSelector(state => state.api.apiResponse);\n    const dispatch = useDispatch();\n    const importFileRef = useRef();\n\n    useEffect(() => {\n        dispatch(getAccountInformation(accessToken));\n    }, [accessToken, dispatch])\n\n    const openBrowseHandler = () => {\n        importFileRef.current.click();\n    };\n\n    const arrayChunk = (array, chunkSize) => {\n        const result = [];\n        for (let i = 0; i < array.length; i += chunkSize) {\n            const chunk = array.slice(i, i + chunkSize);\n            result.push(chunk);\n        }\n        return result;\n    }\n\n    const backupHandler = async () => {\n        let fetchedPlaylist, backupPlaylist = {};\n        const accountBackup = {playlists: [], followers: []};\n\n        for (const [, item] of Object.entries(apiResponse.playlists.data.items)) {\n            // Creates backup of playlist. Saves playlist name and songs it contains\n            if (item.owner.display_name === accountInformation.username) {\n                fetchedPlaylist = await axios.get(item.href, {\n                    headers: {Authorization: `Bearer ${accessToken}`}\n                });\n                backupPlaylist = {\n                    name: fetchedPlaylist.data.name,\n                    id: fetchedPlaylist.data.id,\n                    tracks: []\n                };\n\n                for (const [, item] of Object.entries(fetchedPlaylist.data.tracks.items)) {\n                    backupPlaylist.tracks.push({\n                        uri: item.track.uri\n                    })\n                }\n                accountBackup.playlists.push(backupPlaylist);\n            } else {\n                // Creates backup of followed playlists\n                accountBackup.followers.push({id: item.id});\n            }\n        }\n\n        const blob = new Blob([JSON.stringify(accountBackup)], {type: 'application/json'});\n        saveAs(blob, 'SpotifyBackup.json');\n    }\n\n    const restoreHandler = async (e) => {\n        const accountBackup = await new Response(e.target.files[0]).json();\n        let trackChunks;\n\n        for (const [, playlist] of Object.entries(accountBackup.playlists)) {\n            // Spotify add items endpoint accepts maximum of 100 tracks in one request\n            trackChunks = arrayChunk(playlist.tracks.map(item => item.uri), 100);\n            // Creates a playlist\n            axiosSpotifyApi(`/users/${accountInformation.userId}/playlists`, {\n                method: 'POST',\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    name: playlist.name\n                }\n            }).then(response => {\n                // Add tracks to playlist\n                trackChunks.forEach((tracksChunk) => {\n                    axiosSpotifyApi(`/playlists/${response.data.id}/tracks`, {\n                        method: 'POST',\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                            'Content-Type': 'application/json'\n                        },\n                        data: {\n                            uris: tracksChunk\n                        }\n                    });\n                });\n            })\n        }\n        // Add the current user as a follower of a playlist\n        for (const [, follower] of Object.entries(accountBackup.followers)) {\n            axiosSpotifyApi(`playlists/${follower.id}/followers`, {\n                method: 'PUT',\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n    };\n\n    return (\n        <Fragment>\n            <Username>{accountInformation.username}</Username>\n            <BreakLine/>\n            <Information>Number of playlists: <Chip label={accountInformation.numberOfPlaylists} className='purple'/></Information>\n            <Information>Total number of tracks: <Chip label={accountInformation.numberOfTracks} className='purple'/></Information>\n            <BreakLine/>\n            <ButtonContainer>\n                <input type='file' id='file' ref={importFileRef} onChange={(e) => restoreHandler(e)} style={{display: 'none'}}/>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => openBrowseHandler()}>Restore</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => backupHandler()}>Backup</Button>\n            </ButtonContainer>\n        </Fragment>\n    );\n}\n\nexport default AccountInformation;","import React, {Fragment, useContext} from \"react\";\nimport Auth from \"../../components/Auth/Auth\";\nimport {Container, Title} from \"./Styles\";\nimport AccountInformation from \"../../components/AccountInformation/AccountInformation\";\nimport {AuthContext} from \"../../context/Auth/AuthContext\";\n\nconst Index = () => {\n    const {isAuthenticated} = useContext(AuthContext);\n\n    let content = <Auth/>;\n    if (isAuthenticated) {\n        content = <AccountInformation/>\n    }\n\n    return (\n        <Fragment>\n            <Title>Spotify backup & restore</Title>\n            <Container>\n                {content}\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default Index;","import React, {Fragment, useEffect, useMemo} from \"react\";\n\nconst Callback = (props) => {\n    const channel = useMemo(() => new BroadcastChannel('access-token'), []);\n\n    useEffect(() => {\n        channel.postMessage(props.location.hash.slice((props.location.hash.indexOf('=') + 1)));\n        window.close();\n    }, [channel, props.location.hash]);\n\n    return (<Fragment/>);\n}\n\nexport default Callback;","import React, {Fragment} from \"react\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Index from './pages/Index/Index';\nimport Callback from './pages/Callback/Callback';\nimport {GlobalStyle} from \"./styles\";\n\nconst App = () => {\n    return (\n        <Fragment>\n            <BrowserRouter>\n                <GlobalStyle setBackground={window.location.pathname === '/'}/>\n                <Route path={'/callback'} component={Callback}/>\n                <Route exact path={'/'} component={Index}/>\n                {/*<PrivateRoute path={'/account-information'} component={AccountInformation}/>*/}\n            </BrowserRouter>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionsTypes from '../actions/actionsTypes';\n\nconst initialState = '';\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionsTypes.SET_ACCESS_TOKEN:\n            return action.accessToken;\n    }\n\n    return state;\n};\n\nexport default reducer;","import * as actionsTypes from '../actions/actionsTypes';\n\nconst initialState = {\n    isLoading: false,\n    accountInformation: {\n        userId: '',\n        username: '',\n        numberOfPlaylists: null,\n        numberOfTracks: null,\n    },\n    apiResponse: {\n        playlists: null,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionsTypes.API_FETCH_START:\n            return {...state, isLoading: true};\n        case actionsTypes.API_FETCH_STOP:\n            return {...state, isLoading: false};\n        case actionsTypes.GET_ACCOUNT_INFORMATION_SUCCESS:\n            let numberOfTracks = 0;\n            for (const [, value] of Object.entries(state.apiResponse.playlists.data.items)) {\n                numberOfTracks += value.tracks.total;\n            }\n            return {\n                ...state,\n                accountInformation: {\n                    username: action.payload.data.display_name,\n                    userId: action.payload.data.id,\n                    numberOfPlaylists: state.apiResponse.playlists.data.total,\n                    numberOfTracks: numberOfTracks\n                }\n            };\n        case actionsTypes.GET_PLAYLISTS_SUCCESS:\n            return {\n                ...state,\n                apiResponse: {\n                    playlists: action.payload\n                }\n            };\n        case actionsTypes.GET_PLAYLIST_SUCCESS:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport accessTokenReducer from \"./store/reducers/accessTokenReducer\";\nimport apiReducer from \"./store/reducers/apiReducer\";\nimport AuthContextProvider from \"./context/Auth/AuthContext\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n    accessToken: accessTokenReducer,\n    api: apiReducer\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            // console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            // console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <AuthContextProvider>\n                <App/>\n            </AuthContextProvider>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}